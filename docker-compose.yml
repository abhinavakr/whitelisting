version: '3'

services:
  traefik:
    image: traefik:v2.9
    container_name: whitelist-traefik-1
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"  # Expose Traefik dashboard
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`192.168.1.2`)"
      - "traefik.http.routers.nginx.entrypoints=web"
      - "traefik.http.routers.nginx.middlewares=maintenanceRedirect@docker"
      - "traefik.http.middlewares.whitelist-ip.ipWhiteList.sourcerange=192.168.1.2/24"  # Add this line to whitelist
    networks:
      - web

  nginx:
    image: whitelist-nginx
    container_name: whitelist-nginx-1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`192.168.1.2`)"
      - "traefik.http.routers.nginx.entrypoints=web"
      - "traefik.http.routers.nginx.tls.certresolver=http"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
      - "traefik.http.middlewares.maintenanceRedirect.redirectRegex.regex=^http://.*$$"
      - "traefik.http.middlewares.maintenanceRedirect.redirectRegex.replacement=http://maintenance.html"
      - "traefik.http.routers.nginx.middlewares=whitelist-ip@docker"  # Apply the whitelist middleware here
    networks:
      - web

networks:
  web:
    driver: bridge
